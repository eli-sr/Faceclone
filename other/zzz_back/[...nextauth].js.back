import NextAuth from "next-auth"
import CredentialsProvider from "next-auth/providers/credentials";

export default NextAuth({
  providers: [
    CredentialsProvider({
        name: "Credentials Provider",
        credentials: {
          username: { label: "Username", type: "text", placeholder: "jsmith" },
          password: {  label: "Password", type: "password" }
        },
        async authorize(credentials, req) {
          if (credentials.username === "rachel" && credentials.password === "1234") {
          const user = { id: 1, name: "Rachel", email: "larachel@example.com" }
            return user
          } 
          else{
            return null
          }
        }
      }),
  ],
  callbacks: {
      jwt: ({token, user}) => {
          // First time jwt callback is run, user object is available
          if(user){
              token.id = user.id;
          }
          return token
      },
      async session ({session, token}) {
          if(token){
              session.id = token.id;
          }
          return session;
      },
  },
  secret: "test",
  jwt: {
      secret: "test",
      encryption: true,
  },
  pages: {
      signIn: "/signin",
  },
})